/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.github.ben-manes.versions' version '0.53.0'
    id 'groovy'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

repositories {
    mavenCentral()
    maven{url = 'https://repo.embabel.com/artifactory/libs-release' }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

var springAiVersion = '1.0.3'
var embabelVersion = '0.1.3'

dependencies {
    implementation 'org.apache.groovy:groovy:5.0.2'
    implementation 'io.github.ollama4j:ollama4j:1.1.1'
    implementation 'dev.langchain4j:langchain4j-ollama:1.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
    implementation "com.embabel.agent:embabel-agent-starter:$embabelVersion"
    implementation "com.embabel.agent:embabel-agent-starter-ollama:$embabelVersion"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:$springAiVersion"
    }
}

// register run tasks for our Groovy scripts (run.pkg.ScriptName)
sourceSets.main.allSource.filter{ it.name.endsWith('.groovy') }.each { source ->
    var name = source.toURI().toString().replaceAll('.*/src/main/groovy/(.*)\\.groovy', '$1')
    name = name.replaceAll('/', '.')
    if (name.startsWith('domain')) return
    tasks.register("run.$name", JavaExec) {
        dependsOn compileGroovy
        group = 'Application'
        description = "Run $source.name as a JVM application/Groovy script"
        classpath = sourceSets.main.runtimeClasspath
        mainClass = name
        jvmArgs = ['--enable-native-access=ALL-UNNAMED'] // avoid warning on JDK25
    }
}
